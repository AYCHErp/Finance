@model dynamic

@{
    ViewBag.Title = "Journal View";
    Layout = ViewBag.FinanceLayoutPath;
}
<style>
    .modal iframe {
        width: 100%;
        border: none;
        height: 700px;
    }
</style>
<div class="ui attached page segment" style="min-height: 100%; padding: 3em;">
    <div class="ui huge title header"></div>
    <div class="ui divider"></div>
    <div class="ui basic buttons">

        <a id="AddNewButton" class="ui basic add new button"></a>
        <a id="ReturnButton" class="ui basic button" style=""></a>
        <div class="ui icon top left pointing dropdown basic button" id="ExportDropDown" tabindex="0">
            <span>
                Export
            </span>
            <div class="menu" tabindex="-1">
                <div class="header">
                    Export This Document
                </div>
                <a class="item" href="javascript:void(0);" onclick="createDoc();">
                    <i class="file word outline blue icon"></i> Export to Doc
                </a>
                <a class="item" href="javascript:void(0);" onclick="createXls();">
                    <i class="file excel outline green icon"></i> Export to Excel
                </a>
                <a class="item" href="javascript:void(0);" onclick="createPDF();">
                    <i class="file pdf outline red icon"></i> Export to PDF
                </a>
            </div>
        </div>
        <a id="PrintButton" href="javascript:void(0);" onclick="print()" class="ui basic button">
            Print
        </a>
    </div>

    <div class="ui stackable form segment" id="Annotation" style="">
        <div class="eight fields">
            <div class="field">
                <input class="date" data-persist placeholder="From" id="FromInputDate" title="From" type="date">
            </div>
            <div class="field">
                <input class="date" data-persist placeholder="To" id="ToInputDate" title="To" type="date">
            </div>
            <div class="field">
                <input placeholder="TranId" id="TranIdInputText" title="TranId" type="text">
            </div>
            <div class="field">
                <input placeholder="TranCode" id="TranCodeInputText" title="TranCode" type="text">
            </div>
            <div class="field">
                <input placeholder="ReferenceNumber" id="ReferenceNumberInputText" title="ReferenceNumber" type="text">
            </div>
            <div class="field">
                <input placeholder="StatementReference" id="StatementReferenceInputText" title="StatementReference" type="text">
            </div>
            <div class="field">
                <input placeholder="PostedBy" id="PostedByInputText" title="PostedBy" type="text">
            </div>
        </div>
        <div class="eight fields">
            <div class="field">
                <input placeholder="Office" id="OfficeInputText" title="Office" type="text">
            </div>
            <div class="field">
                <input placeholder="Status" id="StatusInputText" title="Status" type="text">
            </div>
            <div class="field">
                <input placeholder="VerifiedBy" id="VerifiedByInputText" title="VerifiedBy" type="text">
            </div>
            <div class="field">
                <input placeholder="Reason" id="ReasonInputText" title="Reason" type="text">
            </div>
            <div class="field hidden">
                <input placeholder="UserId" id="UserIdInputText" title="UserId" type="text">
            </div>
            <div class="field hidden">
                <input placeholder="OfficeId" id="OfficeIdInputText" title="OfficeId" type="text">
            </div>
            <div class="field">
                <div class="ui green button" id="ShowButton">Show</div>
            </div>
        </div>


    </div>

    <div class="fluid width overflown section">
        <table id="JournalView" class="ui nowrap table segment">
            <thead>
                <tr>
                    <th>Actions</th>
                    <th>Select</th>
                    <th>TranId</th>
                    <th>TranCode</th>
                    <th>Value Date</th>
                    <th>Book Date</th>
                    <th>Ref#</th>
                    <th>Statement Reference</th>
                    <th>Posted By</th>
                    <th>Office</th>
                    <th>Status</th>
                    <th>Verified By</th>
                    <th>Verified On</th>
                    <th>Reason</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>        
    </div>
</div>

<div class="ui large advice modal">
    <i class="close icon"></i>
    <iframe></iframe>
</div>
<script>
    function prepareView(model) {
        function displayTable(target, data) {
            target.find("tbody").html("");
            function getCell(text) {
                const cell = $("<td />");

                cell.text(text || "");

                return cell;
            };

            function getActionCell(tranId) {
                const cell = $("<td />");

                const checklistAnchor = $("<a title='Checklist Window'><i class='list icon'></i></a>");
                checklistAnchor.attr("href", model.ChecklistUrl.replace("{tranId}", tranId));

                const journalAdviceAnchor = $("<a title='View Journal Advice'><i class='print icon'></i></a>");
                journalAdviceAnchor.attr("href", "javascript:void(0);");
                journalAdviceAnchor.attr("onclick", "showJournalAdvice(" + tranId + ");");

                cell.append(checklistAnchor);
                cell.append(journalAdviceAnchor);

                $.each(model.AdviceButtons, function() {
                    const adviceButton = $("<a title='" + this.Title + "'><i class='zoom icon'></i></a>");
                    adviceButton.attr("href", (this.Href || "").replace("{tranId}", tranId));
                    adviceButton.attr("onclick", (this.OnClick || "").replace("{tranId}", tranId));
                    cell.append(adviceButton);
                });

                return cell;
            };

            function getSelectionCell() {
                const cell = $("<td />");
                const checkbox = $("<div class='ui toggle checkbox'/>");
                const input = $("<input type='checkbox' />");
                const label = $("<label />");

                checkbox.append(input);
                checkbox.append(label);

                cell.append(checkbox);

                return cell;
            };

            $.each(data, function () {
                const item = this;

                const row = $("<tr />");

                row.append(getActionCell(item.TransactionMasterId));
                row.append(getSelectionCell(item.TransactionMasterId));
                row.append(getCell(item.TransactionMasterId));
                row.append(getCell(item.TransactionCode));
                row.append(getCell(item.ValueDate));
                row.append(getCell(item.BookDate));
                row.append(getCell(item.ReferenceNumber));
                row.append(getCell(item.StatementReference));
                row.append(getCell(item.PostedBy));
                row.append(getCell(item.Office));
                row.append(getCell(item.Status));
                row.append(getCell(item.VerifiedBy));
                row.append(getCell(item.VerifiedOn));
                row.append(getCell(item.Reason));

                target.find("tbody").append(row);
            });
        };

        function processQuery() {
            function getModel() {
                const form = window.serializeForm($("#Annotation"));
                form.Book = model.Book;
                return form;
            };

            function displayGrid(target) {
                function request(model) {
                    const url = "/dashboard/finance/tasks/journal/view";
                    const data = JSON.stringify(model);
                    return window.getAjaxRequest(url, "POST", data);
                };

                const model = getModel();

                const ajax = request(model);

                ajax.success(function (response) {
                    displayTable(target, response);
                    target.removeClass("loading");
                });

                ajax.fail(function (xhr) {
                    alert(JSON.stringify(xhr));
                });
            };

            const view = $("#JournalView").addClass("loading");

            displayGrid(view);
        };

        $("#ShowButton").off("click").on("click", function () {
            processQuery();
        });

        loadDatepicker();

        $(".title.header").html(model.Title);

        if (model.AddNewText) {
            $("#AddNewButton").html(model.AddNewText);
            $("#AddNewButton").attr("href", model.AddNewUrl);
        }
        else {
            $("#AddNewButton").remove();
        }

        if (model.ReturnText) {
            $("#ReturnButton").html(model.ReturnText);
            $("#ReturnButton").attr("href", model.ReturnUrl);
        }
        else {
            $("#ReturnButton").remove();
        }

        setTimeout(function () {
            processQuery();
        }, 1000);
    };

    function showJournalAdvice(tranId) {
        $(".modal iframe").attr("src", "/dashboard/reports/source/Areas/MixERP.Finance/Reports/JournalEntry.xml?transaction_master_id=" + tranId);

        setTimeout(function () {
            $(".advice.modal")
                .modal('setting', 'transition', 'horizontal flip')
                .modal("show");

        }, 300);
    };

</script>