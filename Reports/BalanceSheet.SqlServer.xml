<?xml version="1.0" encoding="utf-8" ?>
<FrapidReport>
  <Header />
  <Title>Balance Sheet</Title>
  <TopSection>
  </TopSection>
  <Body>
    <Content>
    </Content>
    <GridViews>
      <GridView>
        <GridViewDataSource Index="0">
        </GridViewDataSource>
      </GridView>
    </GridViews>
  </Body>
  <BottomSection>
  </BottomSection>
  <DataSources>
    <DataSource>
      <Query>
        SELECT 
			account_master_id, CAST(account_master_id  AS varchar(100)) + ' (' + account_master_name + ')' AS heading, 
			account_number+ ' (' + account_name + ')' AS account, previous_period, current_period 
		FROM finance.get_balance_sheet(@PreviousPeriod, @CurrentPeriod, @UserId, @OfficeId, @Factor)
		ORDER BY COALESCE(account_master_id, 999999);
      </Query>
      <Parameters>
        <Parameter Name="@PreviousPeriod" Type="System.DateTime" />
        <Parameter Name="@CurrentPeriod" Type="System.DateTime" />
        <Parameter Name="@UserId" FieldLabel="User Id" Type="int"  DefaultValue="{Meta.UserId}" />
        <Parameter Name="@Factor" Type="int" DefaultValue="100" />
        <Parameter Name="@OfficeId" FieldLabel="Office Id" Type="int"  DefaultValue="{Meta.OfficeId}" />       
      </Parameters>
    </DataSource>
  </DataSources>
  <Script>
  <![CDATA[		
		function breakTable(onRow, title, previous, current){
			function getCell(colspan, text, isBold, right){
				var cell = $("<td />");

				if(isBold){
					cell.css("font-weight", "bold");
				};
				
				if(colspan){
					cell.attr("colspan", colspan);
				};
				
				if(right){
					cell.css("text-align", "right");				
				};

				if(text){
					cell.text(text);
				};
				
				return cell;
			};

			var row = $("<tr />");
			row.append(getCell(3, title, true, true));
			row.append(getCell(null, window.getFormattedNumber(previous), true, true));
			row.append(getCell(null, window.getFormattedNumber(current), true, true));
			
			onRow.after(row);
		};
		
		function parseNumber(number){
			isNegative = false;
			if(number.substr(0, 1) === "(" && number.substr(number.length -1, 1) === ")"){
				number = number.replace(/\(/g, "");
				number = number.replace(/\)/g, "");	
				
				isNegative = true;				
			};
			
			number = window.parseFloat2(number);
			
			if(isNegative){
				number = number * -1;
			};
			
			return number;
		};


		function displayAssetsTotal(){
			var previousTotalAssets = 0;
			var currentTotalAssets = 0;

			$("#GridView0 tr").each(function(){
				const row = $(this);
				const accountMasterId = window.parseInt2(row.find("td:first-child").text().trim()) || 0;

				
				if(accountMasterId > 10999) {
					breakTable(row.prev(), window.translate("TotalAssets"), previousTotalAssets, currentTotalAssets);
					return false;
				};

				const previous = parseNumber(row.find("td:nth-child(4)").text().trim()) || 0;
				const current = parseNumber(row.find("td:nth-child(5)").text().trim()) || 0;

				previousTotalAssets += previous;
				currentTotalAssets += current;
			});			
		};

		function displayLiabilitiesTotal(){
			var previousTotalLiabilities = 0;
			var currentTotalLiabilities = 0;

			$("#GridView0 tr").each(function(){
				const row = $(this);
				const accountMasterId = window.parseInt2(row.find("td:first-child").text().trim()) || 0;
				
				if(accountMasterId >= 15000 && accountMasterId <= 15999) {
					const previous = parseNumber(row.find("td:nth-child(4)").text().trim()) || 0;
					const current = parseNumber(row.find("td:nth-child(5)").text().trim()) || 0;
					
					previousTotalLiabilities += previous;
					currentTotalLiabilities += current;
				};
			});
			
			breakTable($("#GridView0 tbody tr:last-child"), window.translate("TotalLiabilities"), previousTotalLiabilities, currentTotalLiabilities);	
		};
		
		displayAssetsTotal();
		displayLiabilitiesTotal();
	]]>
  </Script>
</FrapidReport>